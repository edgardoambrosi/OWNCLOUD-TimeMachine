#!/bin/bash
#ATTENZIONE: La seguente linea significa che ridirieziono lo stderr su lo stdout 2>&1 e lo stout 1> del presente script sul processo di subshell che apro con () e che ha in esecuzione il comando cat dallo stdinput - che appende sul file /var/log/timeMachine/timemachine.log.
#Questo comando unito con la sintassi >/dev/null 2>&1 appesa alla escuzione del presente script es:
#/path/to/timeMachineLib.sh alfrescodev /home/ambrosi/Desktop/AmbienteSviluppo/AlfrescoDev/ 30 >/dev/null 2>&1
#fa si che tutto il logging venga ridirottato sul file specificato.
#http://urbanautomaton.com/blog/2014/09/09/redirecting-bash-script-output-to-syslog/
BASENAME=$(dirname $0)
THIS_NAME=$(echo $(basename $0)|tr '[:lower:]' '[:upper:]')
PROFILO=$2
TAG=$(echo $1|tr '[:lower:]' '[:upper:]')
exec 1> >(cat - >>/var/log/timeMachine/timemachine_$PROFILO.log) 2>&1

source $BASENAME/../ansi-color/echoColor.sh
source $BASENAME/rules

echo $THIS_NAME: PID OF loggingLib is: $$

function write_log {
	filter_log "$1"
}

#TODO:regole per il filtering da specificare in un foglio di elenco esterno
function filter_log {
		#reload rules per ricaricare nuove regole
		source $BASENAME/rules

		LINE="$1"
		LINE_OUT="$LINE"
		LINE_IN="$LINE"
		#regole di filtro spostate nel file rules
		#FILTERS_OUT=("^.*timeMachineLib\.sh.*$" )
		for FILTER in "${FILTERS_OUT[@]}";
		do
			LINE_OUT=$(echo $LINE_OUT|grep -v "${FILTER}")
		done
		if [ -z "$LINE_OUT" ];
		then 
			return;
		fi		
		#regole di filtro spostate nel file rules
		#FILTERS_IN=("Operation not permitted" "Copying properties" "Updating file"  "Failed:" )
		for FILTER in "${FILTERS_IN[@]}";
		do
			LINE_IN=$(echo $LINE|grep "${FILTER}")
			if [ ! -z "$LINE_IN" ]
			then
				echo $TAG: $(err "$LINE_IN")
				return
			fi
		done
		echo $TAG: $LINE
}

while true;do 
	cat -|
	while read line;
	do 
		write_log "$line"
	done
done
